rstudio:View()
View()
rstudio::viewer()
loadNamespace("rstudio")
plot(c(1,2,3,4))
?outer
outer(c(1,2,3), c(1,1,1))
outer(c(1,2,3), c(1,2,3))
riskFreeDaily <- function(x){
x$excessReturn <- x$logReturn - tbillDaily$RawReturn
x
}
spyDaily <- read.csv("spyDaily.csv")
spyDaily <- orderByDate(spyDaily)
spyDaily <- logRateReturn(spyDaily)[-1,]
tbillDaily <- read.xls("tbill.xls", skip = 8)
tbillDaily <- rename(x = tbillDaily, c("observation_date" = "Date", "DTB3"="Return"))
tbillDaily$DateTime <- as.Date(tbillDaily$Date, "%Y-%m-%d")
tbillDaily <- tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d"), ]
tbillDaily$RawReturn <- tbillDaily$Return / 100
att <- read.csv("tDaily.csv")
att <- orderByDate(att)
att <- logRateReturn(att)[-1,]
msft <- read.csv("msftDaily.csv")
msft <- orderByDate(msft)
msft <- logRateReturn(msft)[-1,]
sam <- read.csv("samDaily.csv")
sam <- orderByDate(sam)
sam <- logRateReturn(sam)[-1,]
ba <- read.csv("baDaily.csv")
ba <- orderByDate(ba)
ba <- logRateReturn(ba)[-1,]
gs <- read.csv("gsDaily.csv")
gs <- orderByDate(gs)
gs <- logRateReturn(gs)[-1,]
orderByDate <- function (x){
x$DateTime <- as.Date(x$Date, "%Y-%m-%d")
x <- x[order(x$DateTime, decreasing=F),]
x <- x[complete.cases(x),]
x
}
logRateReturn <- function(x){
x$logReturn <- c(NA, diff(log(x$Adj.Close)))
x
}
riskFreeReturn <- function(x){
x$excessReturn <- x$logReturn - tbill$WeeklyReturn
x
}
riskFreeDaily <- function(x){
x$excessReturn <- x$logReturn - tbillDaily$RawReturn
x
}
spyDaily <- read.csv("spyDaily.csv")
spyDaily <- orderByDate(spyDaily)
spyDaily <- logRateReturn(spyDaily)[-1,]
tbillDaily <- read.xls("tbill.xls", skip = 8)
tbillDaily <- rename(x = tbillDaily, c("observation_date" = "Date", "DTB3"="Return"))
tbillDaily$DateTime <- as.Date(tbillDaily$Date, "%Y-%m-%d")
tbillDaily <- tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d"), ]
tbillDaily$RawReturn <- tbillDaily$Return / 100
att <- read.csv("tDaily.csv")
att <- orderByDate(att)
att <- logRateReturn(att)[-1,]
msft <- read.csv("msftDaily.csv")
msft <- orderByDate(msft)
msft <- logRateReturn(msft)[-1,]
sam <- read.csv("samDaily.csv")
sam <- orderByDate(sam)
sam <- logRateReturn(sam)[-1,]
ba <- read.csv("baDaily.csv")
ba <- orderByDate(ba)
ba <- logRateReturn(ba)[-1,]
gs <- read.csv("gsDaily.csv")
gs <- orderByDate(gs)
gs <- logRateReturn(gs)[-1,]
setwd("Developer/FTAP Stats HW/HW 10")
setwd("Developer/FTAP Stats HW/HW 10")
riskFreeDaily <- function(x){
x$excessReturn <- x$logReturn - tbillDaily$RawReturn
x
}
spyDaily <- read.csv("spyDaily.csv")
spyDaily <- orderByDate(spyDaily)
spyDaily <- logRateReturn(spyDaily)[-1,]
tbillDaily <- read.xls("tbill.xls", skip = 8)
tbillDaily <- rename(x = tbillDaily, c("observation_date" = "Date", "DTB3"="Return"))
tbillDaily$DateTime <- as.Date(tbillDaily$Date, "%Y-%m-%d")
tbillDaily <- tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d"), ]
tbillDaily$RawReturn <- tbillDaily$Return / 100
att <- read.csv("tDaily.csv")
att <- orderByDate(att)
att <- logRateReturn(att)[-1,]
msft <- read.csv("msftDaily.csv")
msft <- orderByDate(msft)
msft <- logRateReturn(msft)[-1,]
sam <- read.csv("samDaily.csv")
sam <- orderByDate(sam)
sam <- logRateReturn(sam)[-1,]
ba <- read.csv("baDaily.csv")
ba <- orderByDate(ba)
ba <- logRateReturn(ba)[-1,]
gs <- read.csv("gsDaily.csv")
gs <- orderByDate(gs)
gs <- logRateReturn(gs)[-1,]
oneFactor <- function(x, y){
#   lm.x <- lm(x$logReturn~spyDaily$logReturn)
#   lm.x$coefficients <- rename(lm.x$coefficients, c("spyDaily$logReturn"=y))
#   lm.x
lm(x$logReturn~spyDaily$logReturn)
}
lm.att <- oneFactor(att, "attBeta")
lm.msft <- oneFactor(msft, "msftBeta")
lm.sam <- oneFactor(sam, "samBeta")
lm.ba <- oneFactor(ba, "boeingBeta")
lm.gs <- oneFactor(gs, "gsBeta")
lm.gs$coefficients[2]
?sapply
all.betas <- c(lm.gs$coefficients[2], lm.ba$coefficients[2],
lm.sam$coefficients[2], lm.msft$coefficients[2],
lm.att$coefficients[2])
all.residVar <- sapply(c(lm.gs$residuals, lm.ba$residuals,
lm.sam$residuals, lm.msft$residuals,
lm.att$residuals), var)
head(all.residVar)
lm.gs$residuals
var(lm.gs$residuals)
sapply(c(lm.gs$residuals, lm.ba$residuals,
lm.sam$residuals, lm.msft$residuals,
lm.att$residuals), var)
mapply(c(lm.gs$residuals, lm.ba$residuals,
lm.sam$residuals, lm.msft$residuals,
lm.att$residuals), var)
lapply(c(lm.gs$residuals, lm.ba$residuals,
lm.sam$residuals, lm.msft$residuals,
lm.att$residuals), var)
sapply(list(Resids = c(lm.gs$residuals, lm.ba$residuals,
lm.sam$residuals, lm.msft$residuals,
lm.att$residuals)), var)
sapply(list(gsResid = lm.gs$residuals, baResid = lm.ba$residuals,
samResid = lm.sam$residuals, msftResid = lm.msft$residuals,
attResid = lm.att$residuals), var)
diag(5)
resid.All <- sapply(list(gsResid = lm.gs$residuals, baResid = lm.ba$residuals,
samResid = lm.sam$residuals, msftResid = lm.msft$residuals,
attResid = lm.att$residuals), var)
diag(5) * resid.All
?resid
orderByDate <- function (x){
x$DateTime <- as.Date(x$Date, "%Y-%m-%d")
x <- x[order(x$DateTime, decreasing=F),]
x <- x[complete.cases(x),]
x
}
logRateReturn <- function(x){
x$logReturn <- c(NA, diff(log(x$Adj.Close)))
x
}
riskFreeReturn <- function(x){
x$excessReturn <- x$logReturn - tbill$WeeklyReturn
x
}
tbill <- read.xls("tbillWeek.xls", skip = 8)
tbill <- rename(x = tbill, c("observation_date" = "Date", "WTB3MS"="Return"))
tbill$RawReturn <- tbill$Return / 100
tbill$WeeklyReturn <- tbill$RawReturn / 52
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
spy <- logRateReturn(spy)[-1,]
spy <- riskFreeReturn(spy)
bestBuy <- read.csv("bby.csv")
bestBuy <- orderByDate(bestBuy)
bestBuy <- logRateReturn(bestBuy)[-1,]
bestBuy <- riskFreeReturn(bestBuy)
homeDepot <- read.csv("hd.csv")
homeDepot <- orderByDate(homeDepot)
homeDepot <- logRateReturn(homeDepot)[-1,]
homeDepot <- riskFreeReturn(homeDepot)
getwd()
orderByDate <- function (x){
x$DateTime <- as.Date(x$Date, "%Y-%m-%d")
x <- x[order(x$DateTime, decreasing=F),]
x <- x[complete.cases(x),]
x
}
logRateReturn <- function(x){
x$logReturn <- c(NA, diff(log(x$Adj.Close)))
x
}
riskFreeReturn <- function(x){
x$excessReturn <- x$logReturn - tbill$WeeklyReturn
x
}
tbill <- read.xls("tbillWeek.xls", skip = 8)
tbill <- rename(x = tbill, c("observation_date" = "Date", "WTB3MS"="Return"))
tbill$RawReturn <- tbill$Return / 100
tbill$WeeklyReturn <- tbill$RawReturn / 52
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
spy <- logRateReturn(spy)[-1,]
spy <- riskFreeReturn(spy)
bestBuy <- read.csv("bby.csv")
bestBuy <- orderByDate(bestBuy)
bestBuy <- logRateReturn(bestBuy)[-1,]
bestBuy <- riskFreeReturn(bestBuy)
homeDepot <- read.csv("hd.csv")
homeDepot <- orderByDate(homeDepot)
homeDepot <- logRateReturn(homeDepot)[-1,]
homeDepot <- riskFreeReturn(homeDepot)
dir()
tbill <- read.xls("tbillWeek.xls", skip = 8)
require(timeSeries)
require(tseries)
require(stats)
require(forecast)
library(xts)
library(gdata)
library(plyr)
library(knitr)
library(ggplot2)
library(forecast)
require(plotrix)
library(fGarch)
require(splines)
orderByDate <- function (x){
x$DateTime <- as.Date(x$Date, "%Y-%m-%d")
x <- x[order(x$DateTime, decreasing=F),]
x <- x[complete.cases(x),]
x
}
logRateReturn <- function(x){
x$logReturn <- c(NA, diff(log(x$Adj.Close)))
x
}
riskFreeReturn <- function(x){
x$excessReturn <- x$logReturn - tbill$WeeklyReturn
x
}
tbill <- read.xls("tbillWeek.xls", skip = 8)
tbill <- rename(x = tbill, c("observation_date" = "Date", "WTB3MS"="Return"))
tbill$RawReturn <- tbill$Return / 100
tbill$WeeklyReturn <- tbill$RawReturn / 52
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
spy <- logRateReturn(spy)[-1,]
spy <- riskFreeReturn(spy)
bestBuy <- read.csv("bby.csv")
bestBuy <- orderByDate(bestBuy)
bestBuy <- logRateReturn(bestBuy)[-1,]
bestBuy <- riskFreeReturn(bestBuy)
homeDepot <- read.csv("hd.csv")
homeDepot <- orderByDate(homeDepot)
homeDepot <- logRateReturn(homeDepot)[-1,]
homeDepot <- riskFreeReturn(homeDepot)
```{r}
lm.bestBuy <-lm(bestBuy$excessReturn~spy$excessReturn)
v.bestBuy <- var(lm.bestBuy$residuals)
beta.bestBuy <- as.numeric(lm.bestBuy$coefficients["spy$excessReturn"])
lm.homeDepot <-lm(homeDepot$excessReturn~spy$excessReturn)
v.homeDepot <- var(lm.homeDepot$residuals)
beta.homeDepot <- as.numeric(lm.homeDepot$coefficients["spy$excessReturn"])
garch <- garchFit(~garch(2,2),data=spy$excessReturn, trace = F)
vol <- volatility(garch)
cov <- beta.bestBuy*beta.homeDepot*vol^2
denom.bestBuy <- beta.bestBuy^2*vol^2+mean(residuals(lm.bestBuy)^2)
denom.homeDepot <- beta.homeDepot^2*vol^2+mean(residuals(lm.homeDepot)^2)
corr <- cov/sqrt(denom.bestBuy*denom.homeDepot)
forecast <- predict(garch,n.ahead=1)
oneDayVar <- .3^2*(beta.bestBuy^2*forecast$standardDeviation^2 +  var(lm.bestBuy$residuals)) +
.7^2*(beta.homeDepot^2*forecast$standardDeviation^2 + var(lm.homeDepot$residuals)) + 2 *
(.3*.7 * beta.homeDepot * beta.bestBuy * var(resid(garch)) + var(lm.homeDepot$residuals) +
var(lm.bestBuy$residuals))
oneDayVar
resid(garch)
garch@residuals
forecast <- predict(garch,n.ahead=1)
oneDayVar <- .3^2*(beta.bestBuy^2*forecast$standardDeviation^2 +  var(lm.bestBuy$residuals)) +
.7^2*(beta.homeDepot^2*forecast$standardDeviation^2 + var(lm.homeDepot$residuals)) + 2 *
(.3*.7 * beta.homeDepot * beta.bestBuy * var(garch@residuals) + var(lm.homeDepot$residuals) +
var(lm.bestBuy$residuals))
oneDayVar
valrisk_norm<-qnorm(.010,0,1)*sqrt((oneDayVar/length(bestBuy$excessReturn)))
valrisk_norm*1000000
setwd("../Derivative HW 1/")
dir()
?mapply
?mapply
source('~/.active-rstudio-document', echo=TRUE)
?mapply
?mapply
?cat
