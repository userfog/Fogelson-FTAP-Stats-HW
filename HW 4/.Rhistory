par(mfrow=c(2,2))
plot(cars)
sessionInfo()
plot.new()
sessionInfo()library(gdata)
library(plyr)
library(gdata)
library(plyr)
library(knitr)
dir()
setwd("./Developer/FTAP Stats HW/")
setwd("HW 4")
start <- read.xls(xls = "startegies.xls")
strat <- read.xls(xls = "strategies.xls")
test.iid.text(distr = "rnorm", strat$Strategy1, plot = T)
library(tseries)
install.packages("tseries")
install.packages("lawstat")
library("lawstat")
runs.test(strat$Strategy1)
runs.test(strat$Strategy2)
require(stats)
install.packages("tseries")
library(tseries)
jarque.bera.test(strat$Strategy1)
runs.test(strat$Strategy1)
runs.test(x = strat$Strategy1)
install.packages("moments")
library(moments)
all.moments(strat$Strategy2, order.max = 4)
length(all.moments(strat$Strategy1, order.max = 4)[-1])
data.frame(all.moments(strat$Strategy1, order.max = 4)[-1])
moms <- data.frame(matrix(all.moments(strat$Strategy1, order.max = 4)[-1]), ncol=4, nrow=1)
moms
data.frame(matrix(all.moments(strat$Strategy1, order.max = 4)[-1], ncol=4, nrow=1))
moms <- rbind(matrix(all.moments(strat$Strategy2, order.max = 4)[-1], ncol=4, nrow=1))
dir()
strat <- read.xls(xls = "mfunds (2).xls")
head(strat)
funds <- read.xls(xls = "mfunds (2).xls", sheet=2)
funds
dir()
strat <- read.xls(xls = "censuswage.xls")
cen <- read.xls(xls = "censuswage.xls")
head(c)
head(cen)
lm.out <- lm(School ~ Wage, cen)
lm.out <- lm(Wage ~ School, cen)
lm.out
lm.out()
lm.out(1)
lm.out[0]
lm.out[0][1]
for(i in lm.out){print(i)}
for(i in lm.out){if(i == 3){break} print(i)}
for(i in lm.out){if(i == 3){exit} print(i)}
for(i in lm.out){if(i == 3){exit}; print(i)}
for(i in lm.out){if(i == 3){break}; print(i)}
lm.out[[2]]
lm.out[[1]]
lm.out[[1]][1]
lm.out[[1]][2]
lm.out[[1]][2] *2
lm.out[[1]][1] + lm.out[[1]][2] *2
as.numeric(lm.out[[1]][1] + lm.out[[1]][2] *2)
```{r}
dir()
stocks <- read.xls(xls = "capm.xls")
head(stocks)
cen <- read.xls(xls = "censuswage.xls")
lm.out <- lm(Wages ~ School, cen)
lm.out <- lm(Wage ~ School, cen)
names(l.out)
names(lm.out)
sum((lm.out$residuals^2))/length(lm.out$residuals)
names(lm.out$coefficients)
names(lm.out$coefficients["School"])
lm.out$coefficients
lm.out$coefficients["School"]
as.numeric(lm.out$coefficients["School"])
mean(cen$School)
length(cen$School)
var(cen$School)
```{r}
qt(.025, length(cen$School) - 2)
