rstudio:View()
View()
rstudio::viewer()
loadNamespace("rstudio")
plot(c(1,2,3,4))
setwd("./Developer/FTAP Stats HW/HW 10")
dir()
tbill <- read.xls("tbillWeek.xls")
spy <- read.csv("spy.csv")
bestBuy <- read.csv("bby.csv")
homeDepot <- read.csv("hd.csv")
require(timeSeries)
require(tseries)
require(stats)
require(forecast)
library(xts)
library(gdata)
library(plyr)
library(knitr)
library(ggplot2)
library(forecast)
require(plotrix)
library(fGarch)
tbill <- read.xls("tbillWeek.xls", skip = 1890)
head(tbill)
tbill <- read.xls("tbillWeek.xls", skip = 1890, header = T)
tbill <- read.xls("tbillWeek.xls", skip = 1890, header = F)
head(tbill)
tbill <- read.xls("tbillWeek.xls", skip = 1889, header = F)
?sapply
?mapply
?sapply
orderByDate <- function (x){
x$DateTime <- as.Date(x$Date, "%Y-%m-%d")
x <- x[order(x$DateTime, decreasing=F),]
x <- x[complete.cases(x),]
}
orderByDate(spy)
test <- orderByDate(spy)
head(test)
spy <- read.csv("spy.csv")
orderByDate(spy)
head(spy)
spy <- orderByDate(spy)
head(spy)
head(tbill)
tail(tbill)
tail(spy)
tbill <- read.xls("tbillWeek.xls", header = F)
head(tbill)
tbill <- read.xls("tbillWeek.xls", header = F, skip = 16)
head(tbill)
tbill <- read.xls("tbillWeek.xls", skip = 10)
head(tbill)
tbill <- read.xls("tbillWeek.xls", skip = 7)
head(tbill)
tbill <- read.xls("tbillWeek.xls", skip = 8)
head(tbill)
tbill <- rename(x = tbill, c("observation_date" = "Date", "WTB3MS"="Return"))
head(tbill)
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
head(spy)
tbill <- read.xls("tbillWeek.xls", skip = 8)
tbill <- rename(x = tbill, c("observation_date" = "Date", "WTB3MS"="Return"))
head(tbill)
head(spy[-1,])
spy <- orderByDate(spy)[-1,]
head(spy)
logRateReturn <- function(x){
x$logReturn <- diff(log(x$Adj.Close))
x
}
logRateReturn(spy)
logRateReturn <- function(x){
x$logReturn <- c(NA, diff(log(x$Adj.Close)))
x
}
logRateReturn(spy)
head(spy)
spy <- logRateReturn(spy)
head(spy)
head(tbill)
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
spy <- logRateReturn(spy)
head(spy)
head(tbill)
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
spy <- logRateReturn(spy)[-1,]
spy <- riskFreeReturn(spy)
riskFreeReturn <- function(x){
x$excessReturn <- x$logReturn - tbill$Return
x
}
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
spy <- logRateReturn(spy)[-1,]
spy <- riskFreeReturn(spy)
head(spy)
riskFreeReturn <- function(x){
x$excessReturn <- x$logReturn - tbill$WeeklyReturn
x
}
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
spy <- logRateReturn(spy)[-1,]
spy <- riskFreeReturn(spy)
tbill$WeeklyReturn <- tbill$Return / 52
spy <- riskFreeReturn(spy)
head(spy)
head(tbill)
tbill$RawReturn <- tbill$Return / 100
tbill$WeeklyReturn <- tbill$RawReturn / 52
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
spy <- logRateReturn(spy)[-1,]
spy <- riskFreeReturn(spy)
head(spy)
spy <- read.csv("spy.csv")
spy <- orderByDate(spy)
spy <- logRateReturn(spy)[-1,]
spy <- riskFreeReturn(spy)
bestBuy <- read.csv("bby.csv")
bestBuy <- orderByDate(bestBuy)
bestBuy <- logRateReturn(bestBuy)[-1,]
bestBuy <- riskFreeReturn(bestBuy)
lm.bestBuy <-lm(bestBuy$excessReturn~spy$excessReturn)
summary(lm.bestBuy)
var(lm.bestBuy$residuals)
?summary
lm.bestBuy$coefficients
lm.bestBuy$coefficients["spy$excessReturn"]
garch <- garchFit(~garch(2,2),data=spy$excessReturn)
vol<-volatility(garch)
plot(vol, type="l")
resid(lm.bestBuy, standardized = T)
mean(resid(lm.bestBuy, standardized = T))
sd(resid(lm.bestBuy, standardized = T))
rstandard(lm.bestBuy)
mean(rstandard(lm.bestBuy))
sd(rstandard(lm.bestBuy))
?rstandard
stdres(lm.bestBuy)
library(MASS)
stdres(lm.bestBuy)
mean(stdres(lm.bestBuy))
sd(stdres(lm.bestBuy))
mean(rstandard(lm.bestBuy))
sd(rstandard(lm.bestBuy))
head(bestBuy)
valrisk_norm
dir()
read.csv("spyDaily.csv")
head(read.csv("spyDaily.csv"))
require(timeSeries)
require(tseries)
require(stats)
require(forecast)
library(xts)
library(gdata)
library(plyr)
library(knitr)
library(ggplot2)
library(forecast)
require(plotrix)
library(fGarch)
orderByDate <- function (x){
x$DateTime <- as.Date(x$Date, "%Y-%m-%d")
x <- x[order(x$DateTime, decreasing=F),]
x <- x[complete.cases(x),]
x
}
logRateReturn <- function(x){
x$logReturn <- c(NA, diff(log(x$Adj.Close)))
x
}
data <- read.csv("spy.csv")
data <- orderByDate(spy)
data <- logRateReturn(spy)[-1,]
r<-data$logReturn
date <- as.Date(data$Date, format="%m/%d/%Y")
r2=252*r*r
ar=sqrt(252)*r
plot(date,r,type="l")
plot(date,sqrt(r2),type="l")
nrow(data)
hist(r)
skew=mean(r^3)/(mean(r^2)^(3/2))
skew
kurt=mean(r^4)/(mean(r^2)^2)
kurt
#summary stats
acf(r2,400)
absr=abs(r)
acf(absr,400)
#MA
ma <- sqrt(filter(r2,rep(1/100,100), sides=1))
plot(date,abs(ar),type="l")
points(date,ma,type="l",col="red")
#exp_smoother
rmvar <- matrix(0,nrow=length(ar),ncol=1)
rmvar[1,1] <- var(ar)
for (i in 2:length(rmvar))
rmvar[i,1] <- (0.97*rmvar[i-1,1])+(0.03*ar[i-1]^2)
expsmooth<-sqrt(rmvar)
plot(date,abs(ar),type="l", col="grey")
points(date,ma,type="l",col="red")
points(date,expsmooth,type="l",col="blue")
#GARCH
summary(garch.model)
garchvol<-volatility(garch.model)
garchres<-residuals(garch.model)
tail(garchvol,n=1)
plot(date,abs(ar),type="l", col="grey")
points(date,ma,type="l",col="red")
points(date,expsmooth,type="l",col="blue")
points(date,garchvol,type="l",col="green")
stdres<-garchres/garchvol
acf(stdres)
stdres2=stdres^2
acf(stdres2)
hist(stdres)
skew=mean(stdres^3)/(mean(stdres^2)^(3/2))
skew
kurt=mean(stdres^4)/(mean(stdres^2)^2)
kurt
plot(date,abs(ar),type="l", col="grey")
points(date,ma,type="l",col="red")
points(date,expsmooth,type="l",col="blue")
points(date,garchvol,type="l",col="green")
#predict garch
forecast<-predict(garch.model,n.ahead=500)
ts.plot(forecast$standardDeviation,type="l")
forecast<-predict(garch.model,n.ahead=1)
forecast
cc<-qnorm(.010,0,1)
cc
valrisk_norm<-cc*(.1489/sqrt(252))
valrisk_norm
#GARCH with t
tgarch.1.model <- garchFit(~garch(1,1),data=ar, cond.dist=c("std"))
summary(tgarch.1.model)
p<-coef(tgarch.1.model)
t_q<-qt(.01,6.82)/sqrt(p[5]/(p[5]-2))
t_q
valrisk_t<-t_q*(.1489/sqrt(252))
valrisk_t
#Semi parametric
qq=quantile(stdres,.01)
qq
valrisk_sp<-qq*(.1489/sqrt(252))
valrisk_sp
stdres
valrisk_norm
forecast<-predict(garch,n.ahead=1)
forecast
volatility(forecast)
lm.bestBuy
summary(lm.bestBuy)
volatility(lm.bestBuy$residuals)
?qnorm
corr
cov <- beta.bestBuy*beta.homeDepot*vol^2
denom.bestBuy <- beta.bestBuy^2*vol^2+mean(residuals(lm.bestBuy)^2)
denom.homeDepot <- beta.homeDepot^2*vol^2+mean(residuals(lm.homeDepot)^2)
corr=cov/sqrt(denom.bestBuy*denom.homeDepot)
dir()
tbillDaily <- read.xls("tbill.xls")
head(tbillDaily)
head(tbillDaily, n = 20)
tbillDaily <- read.xls("tbill.xls", skip = 7)
head(tbillDaily)
head(tbillDaily$Frequency..Daily)
tbillDaily <- read.xls("tbill.xls", skip = 8)
head(tbillDaily)
tbillDaily$DateTime <- as.Date(tbillDaily$observation_date, "%Y-%m-$d")
head(tbillDaily)
tbillDaily$DateTime <- as.Date(tbillDaily$observation_date, "%Y-%m-%d")
head(tbillDaily)
head(tbillDaily[tbillDaily])
head(tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d")])
head(tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d"), ])
att <- read.csv("tDaily.csv")
head(att)
att <- orderByDate(att)
head(att)
setupYahoo <- function(x){
x < - orderByDate(x)
x <- logRateReturn(x)[-1,]
x <- riskFreeReturn(x)
}
att <- read.csv("tDaily.csv")
setupYahoo(att)
orderByDate(att)
att <- orderByDate(att)
riskFreeDaily <- function(x){
x$excessReturn <- x$logReturn - tbillDaily$Return
x
}]
riskFreeDaily <- function(x){
x$excessReturn <- x$logReturn - tbillDaily$Return
x
}
setupYahoo <- function(x){
x < - orderByDate(x)
x <- logRateReturn(x)[-1,]
x <- riskFreeDaily(x)
}
att <- read.csv("tDaily.csv")
setupYahoo(att)
head(att)
att <- read.csv("tDaily.csv")
att <- orderByDate(att)
att <- logRateReturn(att)[-1,]
att <- riskFreeDaily(att)
att <- read.csv("tDaily.csv")
att <- orderByDate(att)
att <- logRateReturn(att)[-1,]
riskFreeDaily(att)
head(att)
riskFreeDaily <- function(x){
x$excessReturn <- x$logReturn - tbillDaily$RawReturn
x
}
riskFreeDaily(att)
att$logReturn
tbillDaily <- read.xls("tbill.xls", skip = 8)
tbillDaily <- tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d"), ]
tbillDaily <- rename(x = tbill, c("observation_date" = "Date", "DTB3"="Return"))
tbillDaily$RawReturn <- tbill$Return / 100
tbillDaily <- rename(x = tbillDaily, c("observation_date" = "Date", "DTB3"="Return"))
tbillDaily$RawReturn <- tbill$Return / 100
tbillDaily <- rename(x = tbillDaily, c("observation_date" = "Date", "DTB3"="Return"))
tbillDaily$RawReturn <- tbillDaily$Return / 100
head(tbillDaily)
tbillDaily <- read.xls("tbill.xls", skip = 8)
tbillDaily <- tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d"), ]
tbillDaily <- rename(x = tbillDaily, c("observation_date" = "Date", "DTB3"="Return"))
tbillDaily$RawReturn <- tbillDaily$Return / 100
head(tbillDaily)
tbillDaily <- read.xls("tbill.xls", skip = 8)
tbillDaily <- tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d"), ]
head(tbillDaily)
tbillDaily <- read.xls("tbill.xls", skip = 8)
head(tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d"), ])
head(tbillDaily)
tbillDaily <- rename(x = tbillDaily, c("observation_date" = "Date", "DTB3"="Return"))
tbillDaily$DateTime <- as.Date(tbillDaily$Date, "%Y-%m-%d")
head(tbillDaily <- tbillDaily[tbillDaily$DateTime > as.Date("1999-12-31", "%Y-%m-%d"), ])
tbillDaily$RawReturn <- tbillDaily$Return / 100
riskFreeDaily <- function(x){
x$excessReturn <- x$logReturn - tbillDaily$RawReturn
x
}
att <- riskFreeDaily(att)
length(att$logReturn)
length(tbillDaily$logReturn)
length(tbillDaily$RawReturn)
tail(tbillDaily)
tail(att)
head(att)
head(tbillDaily)
ers <- read.csv("ersDaily.csv")
ers <- orderByDate(ers)
ers <- logRateReturn(ers)[-1,]
head(ers)
plot(ers$logReturn)
plot(ers$Date,ers$logReturn)
plot(ers$DateTime,ers$logReturn)
plot.ts(ers$DateTime,ers$logReturn)
plot.ts(ers$DateTime,ers$logReturn, type = "l")
plot.ts(ers$DateTime,ers$Adj.Close, type = "l")
h <- read.csv("hDaily.csv")
h <- orderByDate(h)
h <- logRateReturn(h)[-1,]
plot.ts(h$DateTime,h$Adj.Close, type = "l")
plot.ts(h$DateTime,h$logReturn, type = "l")
head(h)
head(tbill)
head(tbillDaily)
head(gs)
gs <- read.csv("gsDaily.csv")
gs <- orderByDate(gs)
gs <- logRateReturn(gs)[-1,]
head(gs)
length(tbillDaily$Date)
length(gs$Date)
dif <- gs$DateTime != tbillDaily$DateTime
head(gs)
head(att)
oneFactor <- function(x){
lm(x$logReturn~spy$logReturn)
}
sapply(oneFactor, c(att, gs))
sapply(c(att, gs), oneFactor)
oneFactor(att)
spyDaily <- read.csv("spyDaily.csv")
spyDaily <- orderByDate(spyDaily)
spyDaily <- logRateReturn(spyDaily)[-1,]
oneFactor(att)
length(spy$Date)
head(spy)
tail(spy)
tail(spyDaily)
head(spyDaily)
head(gs)
oneFactor(gs)
oneFactor <- function(x){
lm(x$logReturn~spyDaily$logReturn)
}
oneFactor(gs)
sapply(c(att, gs), oneFactor)
vcov(gs, att)
vcov(gs, att)oneFactor <- function(x){
lm(x$logReturn~spyDaily$logReturn)
oneFactor <- function(x){
lm(x$logReturn~spyDaily$logReturn)
}
lm.att <- oneFactor(att)
lm.gs <- oneFactor(gs)
vcov(lm.gs, lm.att)
var(lm.att)
var(lm.att$residuals)
lm.att$coefficients["spyDaily$logReturn"]*var(spyDaily$logReturn) + var(lm.att)
lm.att$coefficients["spyDaily$logReturn"]
lm.att$coefficients["spyDaily$logReturn"]*var(spyDaily$logReturn) + var(lm.att$residuals)
lm.att$coefficients["spyDaily$logReturn"]^2*var(spyDaily$logReturn) + var(lm.att$residuals)
lm.att$coefficients["spyDaily$logReturn"]
?lm
rename(lm.att$coefficients, c("spyDaily$logReturn"=
"Goldman"))
oneFactor <- function(x, y){
lm.x <- lm(x$logReturn~spyDaily$logReturn)
lm.x$coefficients <- rename(lm.x$coefficients, c("spyDaily$logReturn"=y))
lm.x
}
lm.att <- oneFactor(att, "attBeta")
lm.att$coefficients
require(splines)
install.packages(splines)
install.packages("splines")
install.packages("splines")
?mdf
require(splines)
?mdf
??mdf
lm.att
?cov
